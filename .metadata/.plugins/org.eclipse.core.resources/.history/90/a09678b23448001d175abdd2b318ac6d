package co.younkyu.selenium.webdriver.basic;

import java.time.Duration;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.WebDriverWait;

public class Register extends Thread {

	// private fields
	private List<String> classes;
	private String ID;
	private String PWD;
	private WebDriver driver;

	// default constructor
	public Register() {
	}

	// parameterized constructor
	public Register(List<String> list, String ID, String PWD) {
		this.classes = list;
		this.ID = ID;
		this.PWD = PWD;
	}

	@SuppressWarnings("deprecation")
	@Override
	public void run() {

		// open window
		System.setProperty("webdriver.chrome.driver", "drivers/chromedriver.exe");
		driver = new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

		// open the web app
		driver.navigate().to("https://sdb.admin.uw.edu/students/uwnetid/register.asp");
		driver.manage().window().maximize();

		// wait until web app has fully loaded
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(15));
		wait.until(webDriver -> "complete"
				.equals(((JavascriptExecutor) webDriver).executeScript("return document.readyState")));

		// UW login
		driver.findElement(By.id("weblogin_netid")).sendKeys(ID);
		driver.findElement(By.id("weblogin_password")).sendKeys(PWD);
		driver.findElement(By.id("submit_button")).click();

		// wait until web app has fully loaded
		wait.until(webDriver -> "complete"
				.equals(((JavascriptExecutor) webDriver).executeScript("return document.readyState")));

		// continue past the 2FA page
		driver.findElement(By.id("submit_button")).click();

		// wait until web app has fully loaded
		wait.until(webDriver -> "complete"
				.equals(((JavascriptExecutor) webDriver).executeScript("return document.readyState")));

		// loop for registration open
		Boolean canRegister = driver.findElements(By.cssSelector("#regform > p:nth-child(6)")).size() > 0;
		while (!canRegister) {
			// refresh page until registration is open every 10 seconds
			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			driver.navigate().refresh();
			wait.until(webDriver -> "complete"
			.equals(((JavascriptExecutor) webDriver).executeScript("return document.readyState")));
			canRegister = driver.findElements(By.cssSelector("#regform > p:nth-child(6)")).size() > 0;
		}

		// loop through all the classes to enter and submit
		for (int n = 0; n < classes.size(); n++) {
			driver.findElement(By.cssSelector("#regform > p:nth-child(6) > table > tbody > tr:nth-child(" + (2 + n)
					+ ") > td:nth-child(2) > input[type=TEXT]")).sendKeys(classes.get(n));
		}

		// // click submit to finalize
		// driver.findElement(By.cssSelector("#regform >
		// input[type=submit]:nth-child(10)")).click();
	}
}
